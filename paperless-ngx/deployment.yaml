apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-ngx-redis        # < name of the deployment
  namespace: paperless-ngx   # < namespace where place the deployment and pods
  labels:
    app: paperless-ngx-redis       # < label for tagging and reference
spec:
  replicas: 1           # < number of pods to deploy
  selector:
    matchLabels:
      app: paperless-ngx-redis
  strategy:
    rollingUpdate:
      maxSurge: 0       # < The number of pods that can be created above the desired amount of pods during an update
      maxUnavailable: 1 # < The number of pods that can be unavailable during the update process
    type: RollingUpdate # < New pods are added gradually, and old pods are terminated gradually
  template:
    metadata:
      labels:
        app: paperless-ngx-redis
    spec:
      volumes:
      - name: redis-data # < linkname of the volume for the pvc
        persistentVolumeClaim:
          claimName: nfs-pvc-paperless-redis

      containers:
      - image: docker.io/library/redis:latest # < the name of the docker image we will use
        name: paperless-ngx-redis                      # < name of container
        imagePullPolicy: Always             # < always use the latest image when creating container/pod
        env:                                # < the environment variables required (see container documentation)
        - name: PGID
          value: "568" # < group "user"
        - name: PUID
          value: "568" # < user "docker"
        - name: TZ
          value: Europe/Brussels


        ports:                              # < the ports required (see container documentation)
         - containerPort: 6380
           name: redis-6380
           protocol: TCP
        volumeMounts:                       # < the volume mount in the container. Look at the relation volumelabel->pvc->pv
         - mountPath: /data              # < mount location in the container
           name:  redis-data             # < volumelabel configured earlier in the yaml file
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-ngx-mariadb        # < name of the deployment
  namespace: paperless-ngx   # < namespace where place the deployment and pods
  labels:
    app: paperless-ngx-mariadb       # < label for tagging and reference
spec:
  replicas: 1           # < number of pods to deploy
  selector:
    matchLabels:
      app: paperless-ngx-mariadb
  strategy:
    rollingUpdate:
      maxSurge: 0       # < The number of pods that can be created above the desired amount of pods during an update
      maxUnavailable: 1 # < The number of pods that can be unavailable during the update process
    type: RollingUpdate # < New pods are added gradually, and old pods are terminated gradually
  template:
    metadata:
      labels:
        app: paperless-ngx-mariadb
    spec:
      volumes:
      - name: mariadb-data # < linkname of the volume for the pvc
        persistentVolumeClaim:
          claimName: nfs-pvc-paperless-mariadb

      containers:
      - image: docker.io/library/mariadb:latest # < the name of the docker image we will use
        name: paperless-ngx                      # < name of container
        imagePullPolicy: Always             # < always use the latest image when creating container/pod
        env:                                # < the environment variables required (see container documentation)
        - name: PGID
          value: "568" # < group "user"
        - name: PUID
          value: "568" # < user "docker"
        - name: TZ
          value: Europe/Brussels
        - name:  MARIADB_HOST
          value:  "paperless"
        - name:  MARIADB_DATABASE
          value:  "paperless"
        - name:  MARIADB_USER
          value:  "paperless"
        - name:  MARIADB_PASSWORD
          value:  "paperless"
        - name:  MARIADB_ROOT_PASSWORD
          value:  "paperless"

        ports:                              # < the ports required (see container documentation)
         - containerPort: 3306
           name: mariadb-3306
           protocol: TCP
        volumeMounts:                       # < the volume mount in the container. Look at the relation volumelabel->pvc->pv
         - mountPath: /var/lib/mysql               # < mount location in the container
           name:  mariadb-data             # < volumelabel configured earlier in the yaml file
        securityContext:
          privileged: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-ngx        # < name of the deployment
  namespace: paperless-ngx   # < namespace where place the deployment and pods
  labels:
    app: paperless-ngx       # < label for tagging and reference
spec:
  replicas: 1           # < number of pods to deploy
  selector:
    matchLabels:
      app: paperless-ngx
  strategy:
    rollingUpdate:
      maxSurge: 0       # < The number of pods that can be created above the desired amount of pods during an update
      maxUnavailable: 1 # < The number of pods that can be unavailable during the update process
    type: RollingUpdate # < New pods are added gradually, and old pods are terminated gradually
  template:
    metadata:
      labels:
        app: paperless-ngx
    spec:
      volumes:
      - name: paperless-ngx-data  # < linkname of the volume for the pvc
        persistentVolumeClaim:
          claimName: nfs-pvc-paperless-data
      - name: paperless-ngx-media # < linkname of the volume for the pvc
        persistentVolumeClaim:
          claimName: nfs-pvc-paperless-media

      - name: paperless-ngx-consume # < linkname of the volume for the pvc
        persistentVolumeClaim:
          claimName: nfs-pvc-paperless-consume
      - name: paperless-ngx-export # < linkname of the volume for the pvc
        persistentVolumeClaim:
          claimName: nfs-pvc-paperless-export
      containers:
      - image: ghcr.io/paperless-ngx/paperless-ngx:latest # < the name of the docker image we will use
        name: paperless-ngx                      # < name of container
        imagePullPolicy: Always             # < always use the latest image when creating container/pod
        env:                                # < the environment variables required (see container documentation)
        - name: PGID
          value: "568" # < group "user"
        - name: PUID
          value: "568" # < user "docker"
        - name: TZ
          value: Europe/Brussels
        - name:  PAPERLESS_DBENGINE
          value:  "mariadb"
        - name:  PAPERLESS_DBHOST
          value:  "db"
        - name:  PAPERLESS_DBUSER
          value:  "paperless"
          value:  "db"
        - name:  PAPERLESS_DBPASS
          value:  "paperless"
          value:  "db"
        - name:  PAPERLESS_DBPORT
          value:  "3306"
        ports:                              # < the ports required (see container documentation)
         - containerPort: 8000
           name: http-80
           protocol: TCP
        volumeMounts:                       # < the volume mount in the container. Look at the relation volumelabel->pvc->pv
         - mountPath: /usr/src/paperless/data               # < mount location in the container
           name: paperless-ngx-data               # < volumelabel configured earlier in the yaml file
         - mountPath: /usr/src/paperless/media
           name: paperless-ngx-media
         - mountPath: /usr/src/paperless/consume
           name: paperless-ngx-consume
         - mountPath: /usr/src/paperless/export
           name: paperless-ngx-export